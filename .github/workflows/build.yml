name: Build App (Windows / macOS / Linux)

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch: {}

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build-macos:
    name: macOS ({{ matrix.arch }})
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix:
        include:
          - arch: x64
            runs_on: macos-latest
          - arch: arm64
            runs_on: macos-13-xlarge
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.arch }}-node20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.arch }}-node20-

      - name: Install dependencies (mac = allow optional for fsevents)
        run: npm ci

      - name: Build mac
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx electron-builder --mac --${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mac-${{ matrix.arch }}
          path: dist/

  build-windows:
    name: Windows (x64)
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ x64 ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-x64-node20-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (skip optional to avoid fsevents)
        run: npm ci --no-optional

      - name: Build win
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx electron-builder --win --${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: win-${{ matrix.arch }}
          path: dist/

  build-linux:
    name: Linux ({{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ x64, arm64 ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.arch }}-node20-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (skip optional to avoid fsevents)
        run: npm ci --no-optional

      - name: Build linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx electron-builder --linux --${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-${{ matrix.arch }}
          path: dist/
