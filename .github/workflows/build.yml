name: Build App

on:
  workflow_dispatch:
  # push:
  #   branches: [ main, master ]
  # pull_request:
  #   branches: [ main, master ]

jobs:
  build-macos:
    name: macOS (arm64)
    runs-on: [self-hosted, macos, arm64]
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      ELECTRON_CACHE: ~/.cache/electron
      ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build macOS App (arm64)
        run: |
          npm run dist -- --mac --arm64 --publish=never

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macOS-arm64
          path: dist/

  build-linux:
    name: Linux (arm64)
    runs-on: ubuntu-22.04
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      ELECTRON_CACHE: ~/.cache/electron
      ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Clean electron-builder cache
        run: |
          rm -rf ~/.cache/electron-builder/fpm

      - name: Install dependencies
        run: npm ci

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            rpm \
            fakeroot \
            dpkg \
            ruby \
            ruby-dev \
            build-essential \
            p7zip-full

      - name: Build Linux App in Docker
        run: |
          docker run --rm -v $PWD:/project -w /project electronuserland/builder:20 \
          /bin/bash -c "npm ci && npm run dist -- --linux --arm64 --publish=never"

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Linux-arm64
          path: dist/

  build-windows:
    name: Windows (arm64)
    runs-on: windows-11-arm
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      ELECTRON_CACHE: ~\AppData\Local\electron\Cache
      ELECTRON_BUILDER_CACHE: ~\AppData\Local\electron-builder\Cache
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Windows Build Tools
        shell: pwsh
        run: |
          choco install python --version=3.11.8 -y
          refreshenv
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel
          choco install visualstudio2022buildtools -y --includeRecommended --includeOptional

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native modules
        run: npx electron-rebuild -v 38.2.2 --arch=arm64

      - name: Build Windows App
        run: |
          npm run dist -- --win --publish=never

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows-arm64
          path: dist/
