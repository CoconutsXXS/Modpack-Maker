name: Multi-Platform Build

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-latest
            arch: arm64

          # Windows builds
          - os: windows-latest
            arch: x64
          - os: windows-latest
            arch: arm64

          # macOS builds (macOS runners are arm64 Apple Silicon by default)
          - os: macos-latest
            arch: arm64
          - os: macos-latest
            arch: x64
          - os: macos-latest
            arch: universal

      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies (clean per OS)
        run: |
          npx rimraf node_modules package-lock.json
          npm install --no-audit --prefer-offline

      - name: Build and package Electron app
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            npx electron-builder --linux --${{ matrix.arch }} --publish never
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            if [[ "${{ matrix.arch }}" == "universal" ]]; then
              npx electron-builder --mac universal --publish never
            else
              npx electron-builder --mac --${{ matrix.arch }} --publish never
            fi
          else
            npx electron-builder --win --${{ matrix.arch }} --publish never
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-build
          path: dist/

  publish:
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Publish Electron release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --publish always
